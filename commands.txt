# Docker Testing Commands Reference

## Basic Testing Commands

# Build and run both containers (recommended for testing after code changes)
docker compose up --build

# Run containers without rebuilding (faster if no code changes)
docker compose up

# Run containers in background/detached mode
docker compose up -d

# Stop and remove all containers, networks
docker compose down

# Stop containers but keep them (don't remove)
docker compose stop


## Clean Rebuild Commands

# Complete clean rebuild
docker compose down
docker compose up --build

# Remove all containers, networks, and volumes
docker compose down -v

# Force rebuild without cache
docker compose build --no-cache
docker compose up


## Individual Container Commands

# Run only the server container
docker compose up server

# Run only the client container
docker compose up client

# Build specific service
docker compose build server
docker compose build client


## Logging Commands

# View all logs
docker compose logs

# View server logs only
docker compose logs server

# View client logs only
docker compose logs client

# Follow logs in real-time
docker compose logs -f

# Follow logs for specific service
docker compose logs -f server
docker compose logs -f client

# View last N lines of logs
docker compose logs --tail=50


## Debugging Commands

# List running containers
docker compose ps

# Execute command in running container
docker compose exec server bash
docker compose exec client bash

# View container details
docker inspect my-server
docker inspect my-client

# View network details
docker network ls
docker network inspect docker-multicontainer_default


## Cleanup Commands

# Stop all containers
docker compose down

# Remove all stopped containers
docker container prune

# Remove all unused images
docker image prune

# Remove all unused volumes
docker volume prune

# Complete cleanup (containers, networks, images, volumes)
docker system prune -a --volumes


## Rebuild After Code Changes

# The workflow:
# 1. Edit your code (client/main.cpp or server/main.cpp)
# 2. Stop current containers:
docker compose down

# 3. Rebuild and run:
docker compose up --build

# Or in one command (Ctrl+C to stop, then rebuild):
docker compose up --build


## Quick Test Workflow

# Start fresh test
docker compose down && docker compose up --build

# Run in background and view logs
docker compose up -d && docker compose logs -f

# Stop background containers
docker compose down
